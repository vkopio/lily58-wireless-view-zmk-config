/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    quick-tap-ms = <175>;
};

/ {
    behaviors {
        questex: questex {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTEX";
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        comma: comma {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        period: period {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        ctrl_dance: ctrl_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LS(LCTRL)>, <&kp LS(LA(LCTRL))>;

            tapping-term-ms = <300>;
        };

        gui_dance: gui_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&kp LS(LEFT_GUI)>;

            tapping-term-ms = <300>;
        };

        alt_dance: alt_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&kp LC(LEFT_ALT)>;

            tapping-term-ms = <300>;
        };
    };

    macros {
        vim_wq: vim_wq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp Q &kp ENTER>;
            label = "VIM_WQ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp ESCAPE     &kp GRAVE  &kp SQT  &kp DOUBLE_QUOTES  &kp TILDE   &kp AMPERSAND                                         &kp PIPE        &slash      &kp EQUAL      &kp PLUS  &kp STAR   &kp CARET
&kp LS(TAB)    &kp Q      &kp W    &kp E              &kp R       &kp T                                                 &kp Y           &kp U       &kp I          &kp O     &kp P      &questex
&kp TAB        &kp A      &kp S    &kp D              &kp F       &kp G                                                 &kp H           &kp J       &kp K          &kp L     &kp RA(P)  &kp RA(Q)
&kp BACKSPACE  &kp Z      &kp X    &kp C              &kp V       &kp B          &kp LA(LC(LEFT))    &kp LA(LC(RIGHT))  &kp N           &kp M       &comma         &period   &kp MINUS  &kp DELETE
                                   &alt_dance         &gui_dance  &ctrl_dance    &lt 1 SPACE         &lt 2 ENTER        &sk LEFT_SHIFT  &kp ESCAPE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&trans  &none   &none   &none   &none   &none                                             &none      &none                 &none                  &none          &none             &none
&trans  &none   &kp N7  &kp N8  &kp N9  &kp PERCENT                                       &kp POUND  &kp LBKT              &kp RBKT               &kp LESS_THAN  &kp GREATER_THAN  &none
&trans  &kp N0  &kp N4  &kp N5  &kp N6  &kp DOLLAR                                        &kp AT     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none          &none             &kp RA(W)
&trans  &none   &kp N1  &kp N2  &kp N3  &kp RA(NUMBER_5)  &kp LS(LA(TAB))    &kp LA(TAB)  &none      &kp LEFT_BRACE        &kp RIGHT_BRACE        &none          &none             &trans
                        &trans  &trans  &trans            &trans             &trans       &trans     &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&trans  &none  &kp F10  &kp F11  &kp F12  &none                                   &none          &none               &none     &none                &none            &none
&trans  &none  &kp F7   &kp F8   &kp F9   &none                                   &kp PAGE_UP    &kp LC(LEFT_ARROW)  &kp UP    &kp LC(RIGHT_ARROW)  &kp PAUSE_BREAK  &none
&trans  &none  &kp F4   &kp F5   &kp F6   &none                                   &kp PAGE_DOWN  &kp LEFT            &kp DOWN  &kp RIGHT            &kp PRINTSCREEN  &none
&trans  &none  &kp F1   &kp F2   &kp F3   &none   &kp LS(LC(TAB))    &kp LC(TAB)  &kp INSERT     &kp HOME            &none     &kp END              &none            &trans
                        &trans   &trans   &trans  &trans             &trans       &trans         &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        control_layer {
            bindings = <
&trans        &trans                &trans                &trans             &trans           &trans                                &trans  &trans   &trans  &trans  &trans  &trans
&out OUT_TOG  &none                 &none                 &none              &none            &none                                 &none   &none    &none   &none   &none   &none
&bt BT_CLR    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE                            &none   &vim_wq  &none   &none   &none   &none
&bootloader   &none                 &none                 &none              &none            &none       &bt BT_PRV    &bt BT_NXT  &none   &none    &none   &none   &none   &bootloader
                                                          &none              &none            &trans      &trans        &trans      &none   &none    &none
            >;

            label = "Controls";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conditional_control_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    quick-tap-ms = <175>;
};

/ {
    behaviors {
        questex: questex {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTEX";
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        comma: comma {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        period: period {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        vim_wq: vim_wq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp Q &kp ENTER>;
            label = "VIM_WQ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp ESCAPE  &kp GRAVE  &kp SQT  &kp DOUBLE_QUOTES  &kp TILDE     &kp AMPERSAND                              &kp PIPE       &slash      &kp STAR       &kp PLUS  &kp EQUAL  &kp CARET
&kp TAB     &kp Q      &kp W    &kp E              &kp R         &kp T                                      &kp Y          &kp U       &kp I          &kp O     &kp P      &questex
&kp LCTRL   &kp A      &kp S    &kp D              &kp F         &kp G                                      &kp H          &kt J       &kp K          &kp L     &kp RA(P)  &kp RA(Q)
&kp LSHFT   &kp Z      &kp X    &kp C              &kp V         &kp B          &kp AT         &kp POUND    &kp N          &kp M       &comma         &period   &kp MINUS  &kp RSHFT
                                &kp LALT           &kp LEFT_GUI  &kp ESCAPE     &lt 1 SPACE    &lt 2 ENTER  &kp BACKSPACE  &kp DELETE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                              &trans  &trans                &trans                 &trans         &trans            &trans
&trans  &none   &kp N7  &kp N8  &kp N9  &kp PERCENT                         &none   &kp LBKT              &kp RBKT               &kp LESS_THAN  &kp GREATER_THAN  &trans
&trans  &kp N0  &kp N4  &kp N5  &kp N6  &kp DOLLAR                          &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none          &none             &kp RA(W)
&trans  &none   &kp N1  &kp N2  &kp N3  &kp RA(NUMBER_5)  &trans    &trans  &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &none          &none             &trans
                        &trans  &trans  &trans            &trans    &trans  &trans  &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&trans  &trans                 &trans                 &trans                     &trans                   &trans                    &trans         &trans              &trans    &trans               &trans           &trans
&trans  &trans                 &kp NUMBER_7           &kp NUMBER_8               &kp NUMBER_9             &trans                    &kp PAGE_UP    &kp LC(LEFT_ARROW)  &kp UP    &kp LC(RIGHT_ARROW)  &kp PAUSE_BREAK  &trans
&trans  &mt LEFT_ALT NUMBER_0  &mt LEFT_GUI NUMBER_4  &mt LEFT_CONTROL NUMBER_5  &mt LEFT_SHIFT NUMBER_6  &trans                    &kp PAGE_DOWN  &kp LEFT            &kp DOWN  &kp RIGHT            &kp PRINTSCREEN  &trans
&trans  &trans                 &kp NUMBER_1           &kp NUMBER_2               &kp NUMBER_3             &trans  &trans    &trans  &kp INSERT     &kp HOME            &trans    &kp END              &trans           &trans
                                                      &trans                     &trans                   &trans  &trans    &trans  &trans         &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        control_layer {
            bindings = <
&kp F1       &kp F2                &kp F3                &kp F4             &kp F5           &kp F6                                &kp F7  &kp F8   &kp F9  &kp F10  &kp F11  &kp F12
&none        &none                 &none                 &none              &none            &none                                 &none   &none    &none   &none    &none    &none
&bt BT_CLR   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE                            &none   &vim_wq  &none   &none    &none    &none
&bootloader  &none                 &none                 &none              &none            &none       &bt BT_PRV    &bt BT_NXT  &none   &none    &none   &none    &none    &bootloader
                                                         &none              &none            &trans      &trans        &trans      &none   &none    &none
            >;

            label = "Controls";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conditional_control_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
